module SyncRAM_tb;

parameter DATA_WIDTH = 8;
parameter ADDR_WIDTH = 4;

reg clk;
reg we;
reg [ADDR_WIDTH-1:0] addr;
reg [DATA_WIDTH-1:0] data_in;
wire [DATA_WIDTH-1:0] data_out;

// Instantiate RAM
SyncRAM #(.DATA_WIDTH(DATA_WIDTH), .ADDR_WIDTH(ADDR_WIDTH)) uut (
    .clk(clk),
    .we(we),
    .addr(addr),
    .data_in(data_in),
    .data_out(data_out)
);

// Clock generation
initial clk = 0;
always #5 clk = ~clk;  // 10 time units clock period

initial begin
    $display("Time\tWE\tADDR\tDATA_IN\tDATA_OUT");

    // Write 0xAA to address 0x2
    we = 1; addr = 4'h2; data_in = 8'hAA; #10;
    $display("%0t\t%b\t%h\t%h\t%h", $time, we, addr, data_in, data_out);

    // Write 0x55 to address 0x5
    we = 1; addr = 4'h5; data_in = 8'h55; #10;
    $display("%0t\t%b\t%h\t%h\t%h", $time, we, addr, data_in, data_out);

    // Read from address 0x2
    we = 0; addr = 4'h2; data_in = 8'h00; #10;
    $display("%0t\t%b\t%h\t%h\t%h", $time, we, addr, data_in, data_out);

    // Read from address 0x5
    we = 0; addr = 4'h5; data_in = 8'h00; #10;
    $display("%0t\t%b\t%h\t%h\t%h", $time, we, addr, data_in, data_out);

    $finish;
end

endmodule
